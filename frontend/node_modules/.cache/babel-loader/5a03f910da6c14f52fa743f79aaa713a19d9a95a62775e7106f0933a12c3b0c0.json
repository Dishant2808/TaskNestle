{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Dishant/TaskNestle/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Initialize auth state\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          // Set token in API headers\n          authAPI.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n\n          // Verify token and get user profile\n          const response = await authAPI.get('/auth/profile');\n          if (response.data.success) {\n            setUser(response.data.data.user);\n            setToken(storedToken);\n          } else {\n            // Invalid token, clear storage\n            localStorage.removeItem('token');\n            delete authAPI.defaults.headers.common['Authorization'];\n          }\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          // Invalid token, clear storage\n          localStorage.removeItem('token');\n          delete authAPI.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          user: userData,\n          token: authToken\n        } = response.data.data;\n\n        // Store token and user data\n        localStorage.setItem('token', authToken);\n        authAPI.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;\n        setUser(userData);\n        setToken(authToken);\n        return {\n          success: true,\n          user: userData\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await authAPI.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          user: userData,\n          token: authToken\n        } = response.data.data;\n\n        // Store token and user data\n        localStorage.setItem('token', authToken);\n        authAPI.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;\n        setUser(userData);\n        setToken(authToken);\n        return {\n          success: true,\n          user: userData\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    // Clear local storage\n    localStorage.removeItem('token');\n\n    // Remove token from API headers\n    delete authAPI.defaults.headers.common['Authorization'];\n\n    // Clear state\n    setUser(null);\n    setToken(null);\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await authAPI.put('/auth/profile', profileData);\n      if (response.data.success) {\n        setUser(response.data.data.user);\n        return {\n          success: true,\n          user: response.data.data.user\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Profile update error:', error);\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed'\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await authAPI.put('/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      if (response.data.success) {\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Password change error:', error);\n      return {\n        success: false,\n        message: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Password change failed'\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","initAuth","storedToken","defaults","headers","common","response","get","data","success","removeItem","error","console","login","email","password","post","userData","authToken","setItem","message","_error$response","_error$response$data","register","name","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/Dishant/TaskNestle/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Initialize auth state\n  useEffect(() => {\n    const initAuth = async () => {\n      const storedToken = localStorage.getItem('token');\n      if (storedToken) {\n        try {\n          // Set token in API headers\n          authAPI.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n          \n          // Verify token and get user profile\n          const response = await authAPI.get('/auth/profile');\n          if (response.data.success) {\n            setUser(response.data.data.user);\n            setToken(storedToken);\n          } else {\n            // Invalid token, clear storage\n            localStorage.removeItem('token');\n            delete authAPI.defaults.headers.common['Authorization'];\n          }\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          // Invalid token, clear storage\n          localStorage.removeItem('token');\n          delete authAPI.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n\n    initAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.post('/auth/login', { email, password });\n      \n      if (response.data.success) {\n        const { user: userData, token: authToken } = response.data.data;\n        \n        // Store token and user data\n        localStorage.setItem('token', authToken);\n        authAPI.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;\n        \n        setUser(userData);\n        setToken(authToken);\n        \n        return { success: true, user: userData };\n      } else {\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const register = async (name, email, password) => {\n    try {\n      const response = await authAPI.post('/auth/register', { name, email, password });\n      \n      if (response.data.success) {\n        const { user: userData, token: authToken } = response.data.data;\n        \n        // Store token and user data\n        localStorage.setItem('token', authToken);\n        authAPI.defaults.headers.common['Authorization'] = `Bearer ${authToken}`;\n        \n        setUser(userData);\n        setToken(authToken);\n        \n        return { success: true, user: userData };\n      } else {\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Registration failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    // Clear local storage\n    localStorage.removeItem('token');\n    \n    // Remove token from API headers\n    delete authAPI.defaults.headers.common['Authorization'];\n    \n    // Clear state\n    setUser(null);\n    setToken(null);\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await authAPI.put('/auth/profile', profileData);\n      \n      if (response.data.success) {\n        setUser(response.data.data.user);\n        return { success: true, user: response.data.data.user };\n      } else {\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Profile update failed' \n      };\n    }\n  };\n\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await authAPI.put('/auth/change-password', {\n        currentPassword,\n        newPassword\n      });\n      \n      if (response.data.success) {\n        return { success: true };\n      } else {\n        return { success: false, message: response.data.message };\n      }\n    } catch (error) {\n      console.error('Password change error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Password change failed' \n      };\n    }\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}