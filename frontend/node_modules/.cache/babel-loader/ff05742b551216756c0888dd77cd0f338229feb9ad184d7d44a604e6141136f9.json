{"ast":null,"code":"import axios from 'axios';\n\n// Base API configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid, redirect to login\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const authAPI = api;\nexport const projectAPI = {\n  // Get all projects\n  getProjects: () => api.get('/projects'),\n  // Get single project\n  getProject: id => api.get(`/projects/${id}`),\n  // Create project\n  createProject: data => api.post('/projects', data),\n  // Update project\n  updateProject: (id, data) => api.put(`/projects/${id}`, data),\n  // Delete project\n  deleteProject: id => api.delete(`/projects/${id}`),\n  // Add members\n  addMembers: (id, memberIds) => api.post(`/projects/${id}/members`, {\n    memberIds\n  }),\n  // Remove members\n  removeMembers: (id, memberIds) => api.delete(`/projects/${id}/members`, {\n    data: {\n      memberIds\n    }\n  }),\n  // Get project members\n  getMembers: id => api.get(`/projects/${id}/members`)\n};\nexport const taskAPI = {\n  // Get tasks for project\n  getTasks: (projectId, params = {}) => api.get(`/projects/${projectId}/tasks`, {\n    params\n  }),\n  // Get single task\n  getTask: id => api.get(`/tasks/${id}`),\n  // Create task\n  createTask: data => api.post(`/projects/${data.projectId}/tasks`, data),\n  // Update task\n  updateTask: (id, data) => api.put(`/tasks/${id}`, data),\n  // Delete task\n  deleteTask: id => api.delete(`/tasks/${id}`),\n  // Get my tasks\n  getMyTasks: (params = {}) => api.get('/tasks/my-tasks', {\n    params\n  }),\n  // Get task stats\n  getTaskStats: projectId => api.get(`/projects/${projectId}/tasks/stats`)\n};\nexport const commentAPI = {\n  // Get comments for task\n  getComments: taskId => api.get(`/tasks/${taskId}/comments`),\n  // Add comment\n  addComment: (taskId, text) => api.post(`/tasks/${taskId}/comments`, {\n    text\n  }),\n  // Update comment\n  updateComment: (commentId, text) => api.put(`/comments/${commentId}`, {\n    text\n  }),\n  // Delete comment\n  deleteComment: commentId => api.delete(`/comments/${commentId}`)\n};\nexport const invitationAPI = {\n  // Invite user to project\n  inviteUser: (projectId, email) => api.post(`/projects/${projectId}/invite`, {\n    email\n  }),\n  // Accept invitation\n  acceptInvitation: data => api.post('/invitations/accept', data),\n  // Verify invitation\n  verifyInvitation: token => api.get(`/invitations/verify/${token}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","projectAPI","getProjects","get","getProject","id","createProject","data","post","updateProject","put","deleteProject","delete","addMembers","memberIds","removeMembers","getMembers","taskAPI","getTasks","projectId","params","getTask","createTask","updateTask","deleteTask","getMyTasks","getTaskStats","commentAPI","getComments","taskId","addComment","text","updateComment","commentId","deleteComment","invitationAPI","inviteUser","email","acceptInvitation","verifyInvitation"],"sources":["/var/www/html/Dishant/TaskNestle/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Base API configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid, redirect to login\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const authAPI = api;\n\nexport const projectAPI = {\n  // Get all projects\n  getProjects: () => api.get('/projects'),\n  \n  // Get single project\n  getProject: (id) => api.get(`/projects/${id}`),\n  \n  // Create project\n  createProject: (data) => api.post('/projects', data),\n  \n  // Update project\n  updateProject: (id, data) => api.put(`/projects/${id}`, data),\n  \n  // Delete project\n  deleteProject: (id) => api.delete(`/projects/${id}`),\n  \n  // Add members\n  addMembers: (id, memberIds) => api.post(`/projects/${id}/members`, { memberIds }),\n  \n  // Remove members\n  removeMembers: (id, memberIds) => api.delete(`/projects/${id}/members`, { data: { memberIds } }),\n  \n  // Get project members\n  getMembers: (id) => api.get(`/projects/${id}/members`),\n};\n\nexport const taskAPI = {\n  // Get tasks for project\n  getTasks: (projectId, params = {}) => api.get(`/projects/${projectId}/tasks`, { params }),\n  \n  // Get single task\n  getTask: (id) => api.get(`/tasks/${id}`),\n  \n  // Create task\n  createTask: (data) => api.post(`/projects/${data.projectId}/tasks`, data),\n  \n  // Update task\n  updateTask: (id, data) => api.put(`/tasks/${id}`, data),\n  \n  // Delete task\n  deleteTask: (id) => api.delete(`/tasks/${id}`),\n  \n  // Get my tasks\n  getMyTasks: (params = {}) => api.get('/tasks/my-tasks', { params }),\n  \n  // Get task stats\n  getTaskStats: (projectId) => api.get(`/projects/${projectId}/tasks/stats`),\n};\n\nexport const commentAPI = {\n  // Get comments for task\n  getComments: (taskId) => api.get(`/tasks/${taskId}/comments`),\n  \n  // Add comment\n  addComment: (taskId, text) => api.post(`/tasks/${taskId}/comments`, { text }),\n  \n  // Update comment\n  updateComment: (commentId, text) => api.put(`/comments/${commentId}`, { text }),\n  \n  // Delete comment\n  deleteComment: (commentId) => api.delete(`/comments/${commentId}`),\n};\n\nexport const invitationAPI = {\n  // Invite user to project\n  inviteUser: (projectId, email) => api.post(`/projects/${projectId}/invite`, { email }),\n  \n  // Accept invitation\n  acceptInvitation: (data) => api.post('/invitations/accept', data),\n  \n  // Verify invitation\n  verifyInvitation: (token) => api.get(`/invitations/verify/${token}`),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}